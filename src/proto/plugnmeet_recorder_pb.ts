// @generated by protoc-gen-es v2.0.0 with parameter "target=ts,import_extension=.ts"
// @generated from file plugnmeet_recorder.proto (package plugnmeet, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file plugnmeet_recorder.proto.
 */
export const file_plugnmeet_recorder: GenFile = /*@__PURE__*/
  fileDesc("ChhwbHVnbm1lZXRfcmVjb3JkZXIucHJvdG8SCXBsdWdubWVldCLrAQoTUGx1Z05tZWV0VG9SZWNvcmRlchIMCgRmcm9tGAEgASgJEicKBHRhc2sYAiABKA4yGS5wbHVnbm1lZXQuUmVjb3JkaW5nVGFza3MSFQoNcm9vbV90YWJsZV9pZBgDIAEoAxIPCgdyb29tX2lkGAQgASgJEhAKCHJvb21fc2lkGAUgASgJEhQKDHJlY29yZGluZ19pZBgGIAEoCRITCgtyZWNvcmRlcl9pZBgHIAEoCRIUCgxhY2Nlc3NfdG9rZW4YCCABKAkSFQoIcnRtcF91cmwYCSABKAlIAIgBAUILCglfcnRtcF91cmwi9AEKE1JlY29yZGVyVG9QbHVnTm1lZXQSDAoEZnJvbRgBIAEoCRInCgR0YXNrGAIgASgOMhkucGx1Z25tZWV0LlJlY29yZGluZ1Rhc2tzEg4KBnN0YXR1cxgDIAEoCBILCgNtc2cYBCABKAkSFAoMcmVjb3JkaW5nX2lkGAUgASgJEhUKDXJvb21fdGFibGVfaWQYCyABKAMSDwoHcm9vbV9pZBgGIAEoCRIQCghyb29tX3NpZBgHIAEoCRITCgtyZWNvcmRlcl9pZBgIIAEoCRIRCglmaWxlX3BhdGgYCSABKAkSEQoJZmlsZV9zaXplGAogASgCImkKEUZyb21QYXJlbnRUb0NoaWxkEicKBHRhc2sYASABKA4yGS5wbHVnbm1lZXQuUmVjb3JkaW5nVGFza3MSFAoMcmVjb3JkaW5nX2lkGAIgASgJEhUKDXJvb21fdGFibGVfaWQYAyABKAMihgEKEUZyb21DaGlsZFRvUGFyZW50EicKBHRhc2sYASABKA4yGS5wbHVnbm1lZXQuUmVjb3JkaW5nVGFza3MSDgoGc3RhdHVzGAIgASgIEgsKA21zZxgDIAEoCRIUCgxyZWNvcmRpbmdfaWQYBCABKAkSFQoNcm9vbV90YWJsZV9pZBgFIAEoAyKBAwoWU3RhcnRSZWNvcmRlckNoaWxkQXJncxIzCgtzZXJ2aWNlVHlwZRgBIAEoDjIeLnBsdWdubWVldC5SZWNvcmRlclNlcnZpY2VUeXBlEhUKDXJvb21fdGFibGVfaWQYAiABKAMSFAoMcmVjb3JkaW5nX2lkGAMgASgJEhQKDGFjY2Vzc190b2tlbhgEIAEoCRIQCghwbm1faG9zdBgFIAEoCRIaCg1wbm1fam9pbl9ob3N0GAYgASgJSACIAQESFQoNd2Vic29ja2V0X3VybBgHIAEoCRIfChJjdXN0b21fY2hyb21lX3BhdGgYCCABKAlIAYgBARISCgV3aWR0aBgJIAEoDUgCiAEBEhMKBmhlaWdodBgKIAEoDUgDiAEBEhUKCHh2ZmJfZHBpGAsgASgNSASIAQFCEAoOX3BubV9qb2luX2hvc3RCFQoTX2N1c3RvbV9jaHJvbWVfcGF0aEIICgZfd2lkdGhCCQoHX2hlaWdodEILCglfeHZmYl9kcGkiaAoNUGx1Z05tZWV0SW5mbxIMCgRob3N0GAEgASgJEg8KB2FwaV9rZXkYAiABKAkSEgoKYXBpX3NlY3JldBgDIAEoCRIWCglqb2luX2hvc3QYBCABKAlIAIgBAUIMCgpfam9pbl9ob3N0IkMKCkNvcHlUb1BhdGgSEQoJbWFpbl9wYXRoGAEgASgJEhUKCHN1Yl9wYXRoGAIgASgJSACIAQFCCwoJX3N1Yl9wYXRoKpwBCg5SZWNvcmRpbmdUYXNrcxITCg9TVEFSVF9SRUNPUkRJTkcQABISCg5TVE9QX1JFQ09SRElORxABEg4KClNUQVJUX1JUTVAQAhINCglTVE9QX1JUTVAQAxIRCg1FTkRfUkVDT1JESU5HEAQSDAoIRU5EX1JUTVAQBRIXChNSRUNPUkRJTkdfUFJPQ0VFREVEEAYSCAoEU1RPUBAHKi4KE1JlY29yZGVyU2VydmljZVR5cGUSDQoJUkVDT1JESU5HEAASCAoEUlRNUBABQjRaMmdpdGh1Yi5jb20vbXluYXBhcnJvdC9wbHVnbm1lZXQtcHJvdG9jb2wvcGx1Z25tZWV0YgZwcm90bzM");

/**
 * @generated from message plugnmeet.PlugNmeetToRecorder
 */
export type PlugNmeetToRecorder = Message<"plugnmeet.PlugNmeetToRecorder"> & {
  /**
   * @generated from field: string from = 1;
   */
  from: string;

  /**
   * @generated from field: plugnmeet.RecordingTasks task = 2;
   */
  task: RecordingTasks;

  /**
   * @generated from field: int64 room_table_id = 3;
   */
  roomTableId: bigint;

  /**
   * @generated from field: string room_id = 4;
   */
  roomId: string;

  /**
   * @generated from field: string room_sid = 5;
   */
  roomSid: string;

  /**
   * @generated from field: string recording_id = 6;
   */
  recordingId: string;

  /**
   * @generated from field: string recorder_id = 7;
   */
  recorderId: string;

  /**
   * @generated from field: string access_token = 8;
   */
  accessToken: string;

  /**
   * @generated from field: optional string rtmp_url = 9;
   */
  rtmpUrl?: string;
};

/**
 * Describes the message plugnmeet.PlugNmeetToRecorder.
 * Use `create(PlugNmeetToRecorderSchema)` to create a new message.
 */
export const PlugNmeetToRecorderSchema: GenMessage<PlugNmeetToRecorder> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 0);

/**
 * @generated from message plugnmeet.RecorderToPlugNmeet
 */
export type RecorderToPlugNmeet = Message<"plugnmeet.RecorderToPlugNmeet"> & {
  /**
   * @generated from field: string from = 1;
   */
  from: string;

  /**
   * @generated from field: plugnmeet.RecordingTasks task = 2;
   */
  task: RecordingTasks;

  /**
   * @generated from field: bool status = 3;
   */
  status: boolean;

  /**
   * @generated from field: string msg = 4;
   */
  msg: string;

  /**
   * @generated from field: string recording_id = 5;
   */
  recordingId: string;

  /**
   * @generated from field: int64 room_table_id = 11;
   */
  roomTableId: bigint;

  /**
   * @generated from field: string room_id = 6;
   */
  roomId: string;

  /**
   * @generated from field: string room_sid = 7;
   */
  roomSid: string;

  /**
   * @generated from field: string recorder_id = 8;
   */
  recorderId: string;

  /**
   * @generated from field: string file_path = 9;
   */
  filePath: string;

  /**
   * next key 12
   *
   * @generated from field: float file_size = 10;
   */
  fileSize: number;
};

/**
 * Describes the message plugnmeet.RecorderToPlugNmeet.
 * Use `create(RecorderToPlugNmeetSchema)` to create a new message.
 */
export const RecorderToPlugNmeetSchema: GenMessage<RecorderToPlugNmeet> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 1);

/**
 * @generated from message plugnmeet.FromParentToChild
 */
export type FromParentToChild = Message<"plugnmeet.FromParentToChild"> & {
  /**
   * @generated from field: plugnmeet.RecordingTasks task = 1;
   */
  task: RecordingTasks;

  /**
   * @generated from field: string recording_id = 2;
   */
  recordingId: string;

  /**
   * @generated from field: int64 room_table_id = 3;
   */
  roomTableId: bigint;
};

/**
 * Describes the message plugnmeet.FromParentToChild.
 * Use `create(FromParentToChildSchema)` to create a new message.
 */
export const FromParentToChildSchema: GenMessage<FromParentToChild> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 2);

/**
 * @generated from message plugnmeet.FromChildToParent
 */
export type FromChildToParent = Message<"plugnmeet.FromChildToParent"> & {
  /**
   * @generated from field: plugnmeet.RecordingTasks task = 1;
   */
  task: RecordingTasks;

  /**
   * @generated from field: bool status = 2;
   */
  status: boolean;

  /**
   * @generated from field: string msg = 3;
   */
  msg: string;

  /**
   * @generated from field: string recording_id = 4;
   */
  recordingId: string;

  /**
   * @generated from field: int64 room_table_id = 5;
   */
  roomTableId: bigint;
};

/**
 * Describes the message plugnmeet.FromChildToParent.
 * Use `create(FromChildToParentSchema)` to create a new message.
 */
export const FromChildToParentSchema: GenMessage<FromChildToParent> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 3);

/**
 * @generated from message plugnmeet.StartRecorderChildArgs
 */
export type StartRecorderChildArgs = Message<"plugnmeet.StartRecorderChildArgs"> & {
  /**
   * @generated from field: plugnmeet.RecorderServiceType serviceType = 1;
   */
  serviceType: RecorderServiceType;

  /**
   * @generated from field: int64 room_table_id = 2;
   */
  roomTableId: bigint;

  /**
   * @generated from field: string recording_id = 3;
   */
  recordingId: string;

  /**
   * @generated from field: string access_token = 4;
   */
  accessToken: string;

  /**
   * @generated from field: string pnm_host = 5;
   */
  pnmHost: string;

  /**
   * @generated from field: optional string pnm_join_host = 6;
   */
  pnmJoinHost?: string;

  /**
   * @generated from field: string websocket_url = 7;
   */
  websocketUrl: string;

  /**
   * @generated from field: optional string custom_chrome_path = 8;
   */
  customChromePath?: string;

  /**
   * @generated from field: optional uint32 width = 9;
   */
  width?: number;

  /**
   * @generated from field: optional uint32 height = 10;
   */
  height?: number;

  /**
   * @generated from field: optional uint32 xvfb_dpi = 11;
   */
  xvfbDpi?: number;
};

/**
 * Describes the message plugnmeet.StartRecorderChildArgs.
 * Use `create(StartRecorderChildArgsSchema)` to create a new message.
 */
export const StartRecorderChildArgsSchema: GenMessage<StartRecorderChildArgs> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 4);

/**
 * @generated from message plugnmeet.PlugNmeetInfo
 */
export type PlugNmeetInfo = Message<"plugnmeet.PlugNmeetInfo"> & {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey: string;

  /**
   * @generated from field: string api_secret = 3;
   */
  apiSecret: string;

  /**
   * @generated from field: optional string join_host = 4;
   */
  joinHost?: string;
};

/**
 * Describes the message plugnmeet.PlugNmeetInfo.
 * Use `create(PlugNmeetInfoSchema)` to create a new message.
 */
export const PlugNmeetInfoSchema: GenMessage<PlugNmeetInfo> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 5);

/**
 * @generated from message plugnmeet.CopyToPath
 */
export type CopyToPath = Message<"plugnmeet.CopyToPath"> & {
  /**
   * @generated from field: string main_path = 1;
   */
  mainPath: string;

  /**
   * @generated from field: optional string sub_path = 2;
   */
  subPath?: string;
};

/**
 * Describes the message plugnmeet.CopyToPath.
 * Use `create(CopyToPathSchema)` to create a new message.
 */
export const CopyToPathSchema: GenMessage<CopyToPath> = /*@__PURE__*/
  messageDesc(file_plugnmeet_recorder, 6);

/**
 * @generated from enum plugnmeet.RecordingTasks
 */
export enum RecordingTasks {
  /**
   * @generated from enum value: START_RECORDING = 0;
   */
  START_RECORDING = 0,

  /**
   * @generated from enum value: STOP_RECORDING = 1;
   */
  STOP_RECORDING = 1,

  /**
   * @generated from enum value: START_RTMP = 2;
   */
  START_RTMP = 2,

  /**
   * @generated from enum value: STOP_RTMP = 3;
   */
  STOP_RTMP = 3,

  /**
   * @generated from enum value: END_RECORDING = 4;
   */
  END_RECORDING = 4,

  /**
   * @generated from enum value: END_RTMP = 5;
   */
  END_RTMP = 5,

  /**
   * @generated from enum value: RECORDING_PROCEEDED = 6;
   */
  RECORDING_PROCEEDED = 6,

  /**
   * @generated from enum value: STOP = 7;
   */
  STOP = 7,
}

/**
 * Describes the enum plugnmeet.RecordingTasks.
 */
export const RecordingTasksSchema: GenEnum<RecordingTasks> = /*@__PURE__*/
  enumDesc(file_plugnmeet_recorder, 0);

/**
 * @generated from enum plugnmeet.RecorderServiceType
 */
export enum RecorderServiceType {
  /**
   * @generated from enum value: RECORDING = 0;
   */
  RECORDING = 0,

  /**
   * @generated from enum value: RTMP = 1;
   */
  RTMP = 1,
}

/**
 * Describes the enum plugnmeet.RecorderServiceType.
 */
export const RecorderServiceTypeSchema: GenEnum<RecorderServiceType> = /*@__PURE__*/
  enumDesc(file_plugnmeet_recorder, 1);

