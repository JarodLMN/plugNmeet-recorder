recorder:
  ## Note: for any id should contain valid characters only
  ## otherwise will be problem with nats (https://docs.nats.io/nats-concepts/subjects#characters-allowed-and-recommended-for-subject-names)
  ## Allowed characters: (a - z),(A - Z), (0 - 9), - and _
  id: node_01
  max_limit: 10
  # you can set it true, if you want to get MP4 as output
  # this will require more times & CPU for encoding
  post_mp4_convert: true
  # use it if you want to use custom chrome
  custom_chrome_path: ""
  # this is optional. You can set the width and height of recorded virtual window which will result in
  # recorded video with same resolution
  width: 1800
  height: 900
  # this is optional. using this variable you can change the DPI for xvfb virtual window, change this to
  # improve the picture clarity but with impact on performance and compatibility
  xvfb_dpi: 200
  copy_to_path:
    # plugnmeet-server should have access this path otherwise user can't download recordings.
    # this path can be NSF or other network path too but make sure nodejs has permission
    # to write this path.
    main_path: "../recording_files"
    # this is optional. If you set this path then it will be included with recording
    # and store in database. This path should be inside main_path. Sometime user want to
    # use specific recording directory for this particular recorder.
    sub_path: "node_01"
  # You can use post-processing scripts for a further process the recording
  # you can find example from post_processing_scripts/example.js
  #post_processing_scripts:
  # should be a full path & make sure nodejs has permission to access
  #  - "./post_processing_scripts/example.js"
# here you can set your custom ffmpeg options
ffmpeg_options:
  recording:
    # any option to set before -i
    pre_input: ""
    post_input: "-movflags faststart -c:v copy -preset veryfast"
  rtmp:
    # any option to set before -i
    pre_input: ""
    post_input: "-c:v libx264 -x264-params keyint=120:scenecut=0 -b:v 2500k -video_size 1280x720 -c:a aac -b:a 128k -ar 44100 -af highpass=f=200,lowpass=f=2000,afftdn -preset ultrafast -crf 5 -vf format=yuv420p -tune zerolatency"
plugNmeet_info:
  # http://localhost:8080
  host: PLUG_N_MEET_SERVER_DOMAIN
  api_key: PLUG_N_MEET_API_KEY
  api_secret: PLUG_N_MEET_SECRET
  # join_host is optional. Use it if plugNmeet-client installed in different place
  # if it's live server then should be https link otherwise won't work.
  # format: https://PLUG_N_MEET_SERVER_DOMAIN/?access_token=
  # join_host: "http://localhost:3000/?access_token="
websocket_server:
  host: "ws://localhost"
  port: 4000
  # openssl rand -hex 10
  # OR
  # cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1
  auth_token: WEBSOCKET_AUTH_TOKEN
nats_info:
  nats_urls:
    - "nats://127.0.0.1:4222"
  user: NATS_USER
  password: NATS_PASSWORD
  recorder:
    recorder_channel: "recorderChannel"
    recorder_info_kv: "pnm-recorderInfo"
